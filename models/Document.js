// models/Document.js
const { DataTypes } = require("sequelize");
const sequelize = require("../config/database");

const Document = sequelize.define("Document", {
  id: {
    type: DataTypes.UUID,
    defaultValue: DataTypes.UUIDV4,
    primaryKey: true,
  },
  type: {
    type: DataTypes.ENUM(
      "sales_order", // Generated by buyer AM
      "purchase_order", // Generated by supplier AM
      "contract" // Signed agreement
    ),
    allowNull: false,
  },
  fileUrl: {
    type: DataTypes.STRING,
    allowNull: false,
  },
  buyerSignedUrl: DataTypes.STRING,
  supplierSignedUrl: DataTypes.STRING,
  signingUrl: {
    type: DataTypes.STRING,
    allowNull: true,
    comment: "URL for signing the document",
  },
  status: {
    type: DataTypes.ENUM(
      "generated",
      "pending_signatures",
      "partially_signed",
      "fully_signed",
      "expired"
    ),
    index: true, // Add this
    defaultValue: "draft",
  },

  signedByBuyerAt: {
    type: DataTypes.DATE,
    allowNull: true,
  },
  signedBySupplierAt: {
    type: DataTypes.DATE,
    allowNull: true,
  },
  metadata: { type: DataTypes.JSON },
});

Document.associate = (models) => {
  Document.belongsTo(models.Order, {
    foreignKey: "orderId",
    as: "order",
  });

  Document.belongsTo(models.User, {
    foreignKey: "generatedById",
    as: "generatedBy",
  });

  Document.belongsTo(models.User, {
    foreignKey: "signedById",
    as: "signedBy",
    allowNull: true,
  });
    // Add these new relationships
    Document.belongsTo(models.User, {
      foreignKey: 'buyerId',
      as: 'buyer'
    });
    
    Document.belongsTo(models.User, {
      foreignKey: 'supplierId',
      as: 'supplier'
    });
};

module.exports = Document;
